plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.ws:spring-ws-core'
	implementation 'org.springframework.integration:spring-integration-webflux'
	implementation 'org.glassfish.jaxb:jaxb-runtime'
	implementation 'jakarta.jws:jakarta.jws-api:3.0.0'
	implementation 'jakarta.xml.ws:jakarta.xml.ws-api:4.0.2'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
	implementation 'jakarta.activation:jakarta.activation-api:2.1.3'
	implementation 'com.sun.xml.bind:jaxb-impl:4.0.5'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'io.cucumber:cucumber-java:7.14.0'
	testImplementation 'io.cucumber:cucumber-junit:7.14.0'
	testImplementation 'io.cucumber:cucumber-spring:7.14.0'
	testImplementation 'org.mockito:mockito-core:5.5.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations {
	cucumberRuntime {
		extendsFrom testImplementation
	}
}

tasks.withType(Jar).configureEach {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
	dependsOn cucumber
	useJUnitPlatform()
}

task cucumber() {
	dependsOn assemble, testClasses
	doLast {
		javaexec {
			main = "io.cucumber.core.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = [
					'--plugin', 'pretty',
					'--plugin', 'html:build/cucumber-reports',
					'--glue', 'com.example.demo',
					'src/test/resources/features'
			]
		}
	}
}

